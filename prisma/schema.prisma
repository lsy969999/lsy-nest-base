// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//TEST Table
model Test_Parent{
  id Int @id @default(autoincrement())
  name String
  delYn Boolean @default(false)
  childs Test_Child[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//TEST Table
model Test_Child {
  id Int @id @default(autoincrement())
  name String
  delYn Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  parent Test_Parent @relation(fields: [parentId], references: [id])
  parentId Int
}
//
//
//
//
//
//

enum AccountProvider {
  EMAIL
  GOOGLE
  KAKAO
  NAVER
  FACEBOOK
}

enum AccountStatus {
  NORMAL
  LOCK
  WITHDRAW
}

enum UserRole {
  ADMIN
  USER
}

model Account {
  accountSn Int @id @default(autoincrement())
  email String
  password String
  provider AccountProvider
  providerId String?
  accountStatus AccountStatus
  userSn Int

  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userSn], references: [userSn])
  accountRefreshToken AccountRefreshToken[]
}

model User {
  userSn Int @id @default(autoincrement())
  name String
  nickName String
  imageUrl String?
  role UserRole @default(USER)

  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())  
  updatedAt DateTime @updatedAt
  account Account[]
}

model AccountRefreshToken {
  accountRefreshTokenSn Int @id @default(autoincrement())
  token String
  accountSn Int
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  account Account @relation(fields: [accountSn], references: [accountSn])
}